{"ast":null,"code":"var _jsxFileName = \"/Users/victor-myha/Desktop/PDP/Online Payments/my-app/src/components/PayPal.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Button() {\n  _s();\n\n  /**\r\n   * usePayPalScriptReducer use within PayPalScriptProvider\r\n   * isPending: not finished loading(default state)\r\n   * isResolved: successfully loaded\r\n   * isRejected: failed to load\r\n   */\n  const [{\n    isPending\n  }] = usePayPalScriptReducer();\n  const paypalbuttonTransactionProps = {\n    style: {\n      layout: 'vertical'\n    },\n\n    createOrder(data, actions) {\n      return actions.order.create({\n        purchase_units: [{\n          amount: {\n            value: '0.01'\n          }\n        }]\n      });\n    },\n\n    onApprove(data, actions) {\n      /**\r\n       * data: {\r\n       *   orderID: string;\r\n       *   payerID: string;\r\n       *   paymentID: string | null;\r\n       *   billingToken: string | null;\r\n       *   facilitatorAccesstoken: string;\r\n       * }\r\n       */\n      return actions.order.capture({}).then(details => {\n        var _details$payer$name$g;\n\n        alert('Transaction completed by' + ((_details$payer$name$g = details === null || details === void 0 ? void 0 : details.payer.name.given_name) !== null && _details$payer$name$g !== void 0 ? _details$payer$name$g : 'No details'));\n        alert('Data details: ' + JSON.stringify(data, null, 2));\n      });\n    }\n\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [isPending ? /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Load Smart Payment Button...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this) : null, /*#__PURE__*/_jsxDEV(PayPalButtons, { ...paypalbuttonTransactionProps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Button, \"RjiHh9V02YoiBlGRVsHKbv0Sng4=\", true);\n\n_c = Button;\n\nconst PayPal = () => {\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line react/jsx-no-undef\n    _jsxDEV(PayPalScriptProvider, {\n      options: paypalScriptOptions,\n      children: /*#__PURE__*/_jsxDEV(Button, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 4\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 3\n    }, this)\n  );\n};\n\n_c2 = PayPal;\nexport default PayPal;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"PayPal\");","map":{"version":3,"names":["React","Button","isPending","usePayPalScriptReducer","paypalbuttonTransactionProps","style","layout","createOrder","data","actions","order","create","purchase_units","amount","value","onApprove","capture","then","details","alert","payer","name","given_name","JSON","stringify","PayPal","paypalScriptOptions"],"sources":["/Users/victor-myha/Desktop/PDP/Online Payments/my-app/src/components/PayPal.tsx"],"sourcesContent":["import React, {useEffect, useRef} from 'react';\r\n\r\nfunction Button() {\r\n\t/**\r\n\t * usePayPalScriptReducer use within PayPalScriptProvider\r\n\t * isPending: not finished loading(default state)\r\n\t * isResolved: successfully loaded\r\n\t * isRejected: failed to load\r\n\t */\r\n\tconst [{ isPending }] = usePayPalScriptReducer();\r\n\tconst paypalbuttonTransactionProps: PayPalButtonsComponentProps = {\r\n\t\tstyle: { layout: 'vertical' },\r\n\t\tcreateOrder(data, actions) {\r\n\t\t\treturn actions.order.create({\r\n\t\t\t\tpurchase_units: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tamount: {\r\n\t\t\t\t\t\t\tvalue: '0.01'\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t});\r\n\t\t},\r\n\t\tonApprove(data, actions) {\r\n\t\t\t/**\r\n\t\t\t * data: {\r\n\t\t\t *   orderID: string;\r\n\t\t\t *   payerID: string;\r\n\t\t\t *   paymentID: string | null;\r\n\t\t\t *   billingToken: string | null;\r\n\t\t\t *   facilitatorAccesstoken: string;\r\n\t\t\t * }\r\n\t\t\t */\r\n\t\t\treturn actions.order.capture({}).then((details) => {\r\n\t\t\t\talert(\r\n\t\t\t\t\t'Transaction completed by' +\r\n\t\t\t\t\t(details?.payer.name.given_name ?? 'No details')\r\n\t\t\t\t);\r\n\r\n\t\t\t\talert('Data details: ' + JSON.stringify(data, null, 2));\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isPending ? <h2>Load Smart Payment Button...</h2> : null}\r\n\t\t\t<PayPalButtons {...paypalbuttonTransactionProps} />\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nconst PayPal = () => {\r\n\treturn (\r\n\t\t// eslint-disable-next-line react/jsx-no-undef\r\n\t\t<PayPalScriptProvider options={paypalScriptOptions}>\r\n\t\t\t<Button />\r\n\t\t</PayPalScriptProvider>\r\n\t);\r\n};\r\n\r\nexport default PayPal;"],"mappings":";;;AAAA,OAAOA,KAAP,MAAuC,OAAvC;;;;AAEA,SAASC,MAAT,GAAkB;EAAA;;EACjB;AACD;AACA;AACA;AACA;AACA;EACC,MAAM,CAAC;IAAEC;EAAF,CAAD,IAAkBC,sBAAsB,EAA9C;EACA,MAAMC,4BAAyD,GAAG;IACjEC,KAAK,EAAE;MAAEC,MAAM,EAAE;IAAV,CAD0D;;IAEjEC,WAAW,CAACC,IAAD,EAAOC,OAAP,EAAgB;MAC1B,OAAOA,OAAO,CAACC,KAAR,CAAcC,MAAd,CAAqB;QAC3BC,cAAc,EAAE,CACf;UACCC,MAAM,EAAE;YACPC,KAAK,EAAE;UADA;QADT,CADe;MADW,CAArB,CAAP;IASA,CAZgE;;IAajEC,SAAS,CAACP,IAAD,EAAOC,OAAP,EAAgB;MACxB;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACG,OAAOA,OAAO,CAACC,KAAR,CAAcM,OAAd,CAAsB,EAAtB,EAA0BC,IAA1B,CAAgCC,OAAD,IAAa;QAAA;;QAClDC,KAAK,CACJ,uDACCD,OADD,aACCA,OADD,uBACCA,OAAO,CAAEE,KAAT,CAAeC,IAAf,CAAoBC,UADrB,yEACmC,YADnC,CADI,CAAL;QAKAH,KAAK,CAAC,mBAAmBI,IAAI,CAACC,SAAL,CAAehB,IAAf,EAAqB,IAArB,EAA2B,CAA3B,CAApB,CAAL;MACA,CAPM,CAAP;IAQA;;EA/BgE,CAAlE;EAiCA,oBACC;IAAA,WACEN,SAAS,gBAAG;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAH,GAA2C,IADtD,eAEC,QAAC,aAAD,OAAmBE;IAAnB;MAAA;MAAA;MAAA;IAAA,QAFD;EAAA,gBADD;AAMA;;GA/CQH,M;;KAAAA,M;;AAiDT,MAAMwB,MAAM,GAAG,MAAM;EACpB;IAAA;IACC;IACA,QAAC,oBAAD;MAAsB,OAAO,EAAEC,mBAA/B;MAAA,uBACC,QAAC,MAAD;QAAA;QAAA;QAAA;MAAA;IADD;MAAA;MAAA;MAAA;IAAA;EAFD;AAMA,CAPD;;MAAMD,M;AASN,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}