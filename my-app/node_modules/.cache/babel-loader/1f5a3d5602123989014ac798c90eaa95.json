{"ast":null,"code":"var _jsxFileName = \"/Users/victor-myha/Desktop/PDP/Online Payments/my-app/src/components/Stripe/StripeForm.tsx\",\n    _s = $RefreshSig$();\n\nimport { CardElement, useElements, useStripe } from '@stripe/react-stripe-js';\nimport axios from 'axios';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CARD_OPTIONS = {\n  iconStyle: 'solid',\n  style: {\n    base: {\n      iconColor: '#c4f0ff',\n      color: '#fff',\n      fontWeight: 500,\n      fontFamily: 'Roboto, Open Sans, Segoe UI, sans-serif',\n      fontSize: '16px',\n      fontSmoothing: 'antialiased',\n      ':-webkit-autofill': {\n        color: '#fce883'\n      },\n      '::placeholder': {\n        color: '#87bbfd'\n      }\n    },\n    invalid: {\n      iconColor: '#ffc7ee',\n      color: '#ffc7ee'\n    }\n  }\n};\nexport default function PaymentForm() {\n  _s();\n\n  const [success, setSuccess] = useState(false);\n  const stripe = useStripe();\n  const elements = useElements();\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const {\n      error,\n      paymentMethod\n    } = await stripe.createPaymentMethod({\n      type: 'card',\n      card: elements.getElement(CardElement)\n    });\n\n    if (!error) {\n      try {\n        const {\n          id\n        } = paymentMethod;\n        const response = await axios.post('http://localhost:4000/payment', {\n          amount: 1000,\n          id\n        });\n\n        if (response.data.success) {\n          console.log('Successful payment');\n          setSuccess(true);\n        }\n      } catch (error) {\n        console.log('Error', error);\n      }\n    } else {\n      console.log(error.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !success ? /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"fieldset\", {\n        className: \"FormGroup\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"FormRow\",\n          children: /*#__PURE__*/_jsxDEV(CardElement, {\n            options: CARD_OPTIONS\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Pay\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"You just bought a sweet spatula congrats this is the best decision of you're life\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n\n_s(PaymentForm, \"EMVTPBRU/bJmYZxDq7hcPwcWEvI=\", false, function () {\n  return [useStripe, useElements];\n});\n\n_c = PaymentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaymentForm\");","map":{"version":3,"names":["CardElement","useElements","useStripe","axios","React","useState","CARD_OPTIONS","iconStyle","style","base","iconColor","color","fontWeight","fontFamily","fontSize","fontSmoothing","invalid","PaymentForm","success","setSuccess","stripe","elements","handleSubmit","e","preventDefault","error","paymentMethod","createPaymentMethod","type","card","getElement","id","response","post","amount","data","console","log","message"],"sources":["/Users/victor-myha/Desktop/PDP/Online Payments/my-app/src/components/Stripe/StripeForm.tsx"],"sourcesContent":["import { CardElement, useElements, useStripe } from '@stripe/react-stripe-js';\nimport axios from 'axios';\nimport React, { useState } from 'react';\n\n\nconst CARD_OPTIONS = {\n\ticonStyle: 'solid',\n\tstyle: {\n\t\tbase: {\n\t\t\ticonColor: '#c4f0ff',\n\t\t\tcolor: '#fff',\n\t\t\tfontWeight: 500,\n\t\t\tfontFamily: 'Roboto, Open Sans, Segoe UI, sans-serif',\n\t\t\tfontSize: '16px',\n\t\t\tfontSmoothing: 'antialiased',\n\t\t\t':-webkit-autofill': { color: '#fce883' },\n\t\t\t'::placeholder': { color: '#87bbfd' }\n\t\t},\n\t\tinvalid: {\n\t\t\ticonColor: '#ffc7ee',\n\t\t\tcolor: '#ffc7ee'\n\t\t}\n\t}\n};\n\nexport default function PaymentForm() {\n\tconst [success, setSuccess ] = useState(false);\n\tconst stripe = useStripe();\n\tconst elements = useElements();\n\n\n\tconst handleSubmit = async (e) => {\n\t\te.preventDefault();\n\t\tconst {error, paymentMethod} = await stripe.createPaymentMethod({\n\t\t\ttype: 'card',\n\t\t\tcard: elements.getElement(CardElement)\n\t\t});\n\n\n\t\tif(!error) {\n\t\t\ttry {\n\t\t\t\tconst {id} = paymentMethod;\n\t\t\t\tconst response = await axios.post('http://localhost:4000/payment', {\n\t\t\t\t\tamount: 1000,\n\t\t\t\t\tid\n\t\t\t\t});\n\n\t\t\t\tif(response.data.success) {\n\t\t\t\t\tconsole.log('Successful payment');\n\t\t\t\t\tsetSuccess(true);\n\t\t\t\t}\n\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log('Error', error);\n\t\t\t}\n\t\t} else {\n\t\t\tconsole.log(error.message);\n\t\t}\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t{!success ? \n\t\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t\t<fieldset className=\"FormGroup\">\n\t\t\t\t\t\t<div className=\"FormRow\">\n\t\t\t\t\t\t\t<CardElement options={CARD_OPTIONS}/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</fieldset>\n\t\t\t\t\t<button>Pay</button>\n\t\t\t\t</form>\n\t\t\t\t:\n\t\t\t\t<div>\n\t\t\t\t\t<h2>You just bought a sweet spatula congrats this is the best decision of you're life</h2>\n\t\t\t\t</div> \n\t\t\t}\n            \n\t\t</>\n\t);\n}\n"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,WAAtB,EAAmCC,SAAnC,QAAoD,yBAApD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAGA,MAAMC,YAAY,GAAG;EACpBC,SAAS,EAAE,OADS;EAEpBC,KAAK,EAAE;IACNC,IAAI,EAAE;MACLC,SAAS,EAAE,SADN;MAELC,KAAK,EAAE,MAFF;MAGLC,UAAU,EAAE,GAHP;MAILC,UAAU,EAAE,yCAJP;MAKLC,QAAQ,EAAE,MALL;MAMLC,aAAa,EAAE,aANV;MAOL,qBAAqB;QAAEJ,KAAK,EAAE;MAAT,CAPhB;MAQL,iBAAiB;QAAEA,KAAK,EAAE;MAAT;IARZ,CADA;IAWNK,OAAO,EAAE;MACRN,SAAS,EAAE,SADH;MAERC,KAAK,EAAE;IAFC;EAXH;AAFa,CAArB;AAoBA,eAAe,SAASM,WAAT,GAAuB;EAAA;;EACrC,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAyBd,QAAQ,CAAC,KAAD,CAAvC;EACA,MAAMe,MAAM,GAAGlB,SAAS,EAAxB;EACA,MAAMmB,QAAQ,GAAGpB,WAAW,EAA5B;;EAGA,MAAMqB,YAAY,GAAG,MAAOC,CAAP,IAAa;IACjCA,CAAC,CAACC,cAAF;IACA,MAAM;MAACC,KAAD;MAAQC;IAAR,IAAyB,MAAMN,MAAM,CAACO,mBAAP,CAA2B;MAC/DC,IAAI,EAAE,MADyD;MAE/DC,IAAI,EAAER,QAAQ,CAACS,UAAT,CAAoB9B,WAApB;IAFyD,CAA3B,CAArC;;IAMA,IAAG,CAACyB,KAAJ,EAAW;MACV,IAAI;QACH,MAAM;UAACM;QAAD,IAAOL,aAAb;QACA,MAAMM,QAAQ,GAAG,MAAM7B,KAAK,CAAC8B,IAAN,CAAW,+BAAX,EAA4C;UAClEC,MAAM,EAAE,IAD0D;UAElEH;QAFkE,CAA5C,CAAvB;;QAKA,IAAGC,QAAQ,CAACG,IAAT,CAAcjB,OAAjB,EAA0B;UACzBkB,OAAO,CAACC,GAAR,CAAY,oBAAZ;UACAlB,UAAU,CAAC,IAAD,CAAV;QACA;MAED,CAZD,CAYE,OAAOM,KAAP,EAAc;QACfW,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBZ,KAArB;MACA;IACD,CAhBD,MAgBO;MACNW,OAAO,CAACC,GAAR,CAAYZ,KAAK,CAACa,OAAlB;IACA;EACD,CA3BD;;EA6BA,oBACC;IAAA,UACE,CAACpB,OAAD,gBACA;MAAM,QAAQ,EAAEI,YAAhB;MAAA,wBACC;QAAU,SAAS,EAAC,WAApB;QAAA,uBACC;UAAK,SAAS,EAAC,SAAf;UAAA,uBACC,QAAC,WAAD;YAAa,OAAO,EAAEhB;UAAtB;YAAA;YAAA;YAAA;UAAA;QADD;UAAA;UAAA;UAAA;QAAA;MADD;QAAA;QAAA;QAAA;MAAA,QADD,eAMC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAND;IAAA;MAAA;MAAA;MAAA;IAAA,QADA,gBAUA;MAAA,uBACC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADD;MAAA;MAAA;MAAA;IAAA;EAXF,iBADD;AAmBA;;GAtDuBW,W;UAERf,S,EACED,W;;;KAHMgB,W"},"metadata":{},"sourceType":"module"}